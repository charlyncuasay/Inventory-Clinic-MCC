{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/inventory'; // Replace with your actual API URL\n\nexport default {\n  __name: 'BatchManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const batches = ref([]);\n    const inventoryItems = ref([]);\n    const newBatch = ref({\n      inventory_item_id: '',\n      batch_number: '',\n      quantity: 0,\n      expiry_date: '',\n      supplier: '',\n      received_date: ''\n    });\n    const fetchBatches = async () => {\n      try {\n        // Replace with your actual backend endpoint\n        const response = await axios.get(`${API_URL}/items`);\n        const data = response.data;\n\n        // Format the data for easier rendering\n        batches.value = data.data.map(item => item.Batches.map(batch => ({\n          batch_number: batch.batch_number,\n          received_date: batch.received_date,\n          expiry_date: batch.expiry_date,\n          item_name: item.name,\n          quantity: batch.quantity,\n          supplier: batch.supplier\n        }))).flat(); // Flatten the nested array\n      } catch (error) {\n        console.error('Error fetching inventory data:', error);\n      }\n    };\n    const fetchInventoryItems = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/items`);\n        inventoryItems.value = response.data.data;\n      } catch (error) {\n        console.error('Error fetching inventory items:', error);\n      }\n    };\n    const addBatch = async () => {\n      try {\n        await axios.post(`${API_URL}/batches`, newBatch.value);\n        await fetchBatches();\n        newBatch.value = {\n          inventory_item_id: '',\n          batch_number: '',\n          quantity: 0,\n          expiry_date: '',\n          supplier: '',\n          received_date: ''\n        };\n      } catch (error) {\n        console.error('Error adding batch:', error);\n      }\n    };\n    const editBatch = batch => {\n      // Implement edit functionality\n      console.log('Edit batch:', batch);\n    };\n    const deleteBatch = async id => {\n      try {\n        await axios.delete(`${API_URL}/batches/${id}`);\n        await fetchBatches();\n      } catch (error) {\n        console.error('Error deleting batch:', error);\n      }\n    };\n    const formatDate = date => {\n      return new Date(date).toLocaleDateString();\n    };\n    onMounted(() => {\n      fetchBatches();\n      fetchInventoryItems();\n    });\n    const __returned__ = {\n      API_URL,\n      batches,\n      inventoryItems,\n      newBatch,\n      fetchBatches,\n      fetchInventoryItems,\n      addBatch,\n      editBatch,\n      deleteBatch,\n      formatDate,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","API_URL","batches","inventoryItems","newBatch","inventory_item_id","batch_number","quantity","expiry_date","supplier","received_date","fetchBatches","response","get","data","value","map","item","Batches","batch","item_name","name","flat","error","console","fetchInventoryItems","addBatch","post","editBatch","log","deleteBatch","id","delete","formatDate","date","Date","toLocaleDateString"],"sources":["C:/Users/Lenovo Pc/OneDrive - Department of Education/Desktop/MCDL_Clinic_Inventory/frontend/src/views/BatchManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <h1 class=\"text-3xl font-semibold text-gray-800 mb-6\">Batch Management</h1>\r\n    \r\n  \r\n    <!-- Batches List -->\r\n    <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <table class=\"min-w-full divide-y divide-gray-200\">\r\n        <thead class=\"bg-gray-50\">\r\n          <tr>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch Number</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Supplier</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Received Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white divide-y divide-gray-200\">\r\n          <tr v-for=\"batch in batches\" :key=\"batch.id\">\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.batch_number }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.inventory_item.name }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.quantity }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.expiry_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.supplier }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.received_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">\r\n              <button @click=\"editBatch(batch)\" class=\"text-indigo-600 hover:text-indigo-900 mr-2\">Edit</button>\r\n              <button @click=\"deleteBatch(batch.id)\" class=\"text-red-600 hover:text-red-900\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>  \r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/inventory'; // Replace with your actual API URL\r\n\r\nconst batches = ref([]);\r\nconst inventoryItems = ref([]);\r\nconst newBatch = ref({\r\n  inventory_item_id: '',\r\n  batch_number: '',\r\n  quantity: 0,\r\n  expiry_date: '',\r\n  supplier: '',\r\n  received_date: ''\r\n});\r\n\r\nconst fetchBatches = async () => {\r\n  try {\r\n      // Replace with your actual backend endpoint\r\n      const response = await axios.get(`${API_URL}/items`);\r\n      const data = response.data;\r\n\r\n      // Format the data for easier rendering\r\n      batches.value = data.data.map(item => \r\n          item.Batches.map(batch => ({\r\n              batch_number: batch.batch_number,\r\n              received_date: batch.received_date,\r\n              expiry_date: batch.expiry_date,\r\n              item_name: item.name,\r\n              quantity: batch.quantity,\r\n              supplier: batch.supplier\r\n          }))\r\n      ).flat(); // Flatten the nested array\r\n  } catch (error) {\r\n      console.error('Error fetching inventory data:', error);\r\n  }\r\n};\r\n\r\nconst fetchInventoryItems = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`);\r\n    inventoryItems.value = response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching inventory items:', error);\r\n  }\r\n};\r\n\r\nconst addBatch = async () => {\r\n  try {\r\n    await axios.post(`${API_URL}/batches`, newBatch.value);\r\n    await fetchBatches();\r\n    newBatch.value = { \r\n      inventory_item_id: '', \r\n      batch_number: '', \r\n      quantity: 0, \r\n      expiry_date: '',\r\n      supplier: '',\r\n      received_date: ''\r\n    };\r\n  } catch (error) {\r\n    console.error('Error adding batch:', error);\r\n  }\r\n};\r\n\r\nconst editBatch = (batch) => {\r\n  // Implement edit functionality\r\n  console.log('Edit batch:', batch);\r\n};\r\n\r\nconst deleteBatch = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/batches/${id}`);\r\n    await fetchBatches();\r\n  } catch (error) {\r\n    console.error('Error deleting batch:', error);\r\n  }\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  return new Date(date).toLocaleDateString();\r\n};\r\n\r\nonMounted(() => {\r\n  fetchBatches();\r\n  fetchInventoryItems();\r\n});\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}