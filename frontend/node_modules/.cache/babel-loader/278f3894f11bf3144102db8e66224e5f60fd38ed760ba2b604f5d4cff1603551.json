{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next';\nimport Modal from '@/components/Modal.vue';\nimport BatchForm from '@/components/BatchForm.vue';\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\nconst API_URL = 'http://localhost:5000/api/inventory';\nexport default {\n  __name: 'BatchManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const batches = ref([]);\n    const inventoryItems = ref([]);\n    const modalType = ref(null);\n    const isSubmitting = ref(false);\n    const isDeleting = ref(false);\n    const currentBatch = ref({});\n    const selectedBatchId = ref(null);\n    const fetchBatches = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/items`);\n        batches.value = response.data.data.reduce((acc, item) => {\n          return [...acc, ...item.batches.map(batch => ({\n            ...batch,\n            inventoryItem: {\n              id: item.id,\n              name: item.name\n            }\n          }))];\n        }, []);\n      } catch (error) {\n        console.error('Error fetching batches:', error);\n      }\n    };\n    const fetchInventoryItems = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/items`);\n        inventoryItems.value = response.data.data;\n      } catch (error) {\n        console.error('Error fetching inventory items:', error);\n      }\n    };\n    const handleSubmit = async () => {\n      try {\n        isSubmitting.value = true;\n        if (modalType.value === 'edit') {\n          await axios.put(`${API_URL}/batches/${currentBatch.value.id}`, currentBatch.value);\n        } else {\n          await axios.post(`${API_URL}/batches`, currentBatch.value);\n        }\n        await fetchBatches();\n        closeModal();\n      } catch (error) {\n        console.error('Error submitting batch:', error);\n      } finally {\n        isSubmitting.value = false;\n      }\n    };\n    const handleDelete = async () => {\n      try {\n        isDeleting.value = true;\n        await axios.delete(`${API_URL}/batches/${selectedBatchId.value}`);\n        await fetchBatches();\n        closeModal();\n      } catch (error) {\n        console.error('Error deleting batch:', error);\n      } finally {\n        isDeleting.value = false;\n      }\n    };\n    const openModal = (type, batch = {}) => {\n      modalType.value = type;\n      if (type === 'edit') {\n        currentBatch.value = {\n          ...batch\n        };\n      } else if (type === 'delete') {\n        selectedBatchId.value = batch.id;\n      } else {\n        currentBatch.value = {\n          inventory_item_id: '',\n          batch_number: '',\n          quantity: 0,\n          expiry_date: '',\n          supplier: '',\n          received_date: ''\n        };\n      }\n    };\n    const closeModal = () => {\n      modalType.value = null;\n      currentBatch.value = {};\n    };\n    const formatDate = date => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    };\n    onMounted(() => {\n      fetchBatches();\n      fetchInventoryItems();\n    });\n    const __returned__ = {\n      API_URL,\n      batches,\n      inventoryItems,\n      modalType,\n      isSubmitting,\n      isDeleting,\n      currentBatch,\n      selectedBatchId,\n      fetchBatches,\n      fetchInventoryItems,\n      handleSubmit,\n      handleDelete,\n      openModal,\n      closeModal,\n      formatDate,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get TrashIcon() {\n        return TrashIcon;\n      },\n      Modal,\n      BatchForm,\n      ConfirmationModal\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","PlusIcon","PencilIcon","TrashIcon","Modal","BatchForm","ConfirmationModal","API_URL","batches","inventoryItems","modalType","isSubmitting","isDeleting","currentBatch","selectedBatchId","fetchBatches","response","get","value","data","reduce","acc","item","map","batch","inventoryItem","id","name","error","console","fetchInventoryItems","handleSubmit","put","post","closeModal","handleDelete","delete","openModal","type","inventory_item_id","batch_number","quantity","expiry_date","supplier","received_date","formatDate","date","Date","toLocaleDateString"],"sources":["C:/Users/PC07/Desktop/MCDL-CLINIC/frontend/src/views/BatchManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <!-- Header -->\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-3xl font-semibold text-gray-800\">Batch Management</h1>\r\n      <button\r\n        @click=\"openModal('add')\"\r\n        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\r\n      >\r\n        <PlusIcon class=\"h-5 w-5\" />\r\n        Add New Batch\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Batch Table -->\r\n    <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <table class=\"min-w-full divide-y divide-gray-200\">\r\n        <thead class=\"bg-gray-50\">\r\n          <tr>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch Number</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Supplier</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Received Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white divide-y divide-gray-200\">\r\n          <tr v-for=\"batch in batches\" :key=\"batch.id\" class=\"hover:bg-gray-50\">\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.batch_number }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.inventoryItem?.name }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.quantity }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.expiry_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.supplier }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.received_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap space-x-2\">\r\n              <button @click=\"openModal('edit', batch)\" class=\"text-blue-600 hover:text-blue-900\">\r\n                <PencilIcon class=\"h-5 w-5\" />\r\n              </button>\r\n              <button @click=\"openModal('delete', batch)\" class=\"text-red-600 hover:text-red-900\">\r\n                <TrashIcon class=\"h-5 w-5\" />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Modals -->\r\n    <Modal\r\n      v-if=\"modalType === 'add' || modalType === 'edit'\"\r\n      :title=\"modalType === 'add' ? 'Add New Batch' : 'Edit Batch'\"\r\n      :loading=\"isSubmitting\"\r\n      @close=\"closeModal\"\r\n      @save=\"handleSubmit\"\r\n    >\r\n      <BatchForm\r\n        v-model=\"currentBatch\"\r\n        :inventory-items=\"inventoryItems\"\r\n        :is-editing=\"modalType === 'edit'\"\r\n      />\r\n    </Modal>\r\n\r\n    <ConfirmationModal\r\n      v-if=\"modalType === 'delete'\"\r\n      title=\"Confirm Delete\"\r\n      message=\"Are you sure you want to delete this batch?\"\r\n      :loading=\"isDeleting\"\r\n      @close=\"closeModal\"\r\n      @confirm=\"handleDelete\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next';\r\n\r\nimport Modal from '@/components/Modal.vue';\r\nimport BatchForm from '@/components/BatchForm.vue';\r\nimport ConfirmationModal from '@/components/ConfirmationModal.vue';\r\n\r\nconst API_URL = 'http://localhost:5000/api/inventory';\r\n\r\nconst batches = ref([]);\r\nconst inventoryItems = ref([]);\r\nconst modalType = ref(null);\r\nconst isSubmitting = ref(false);\r\nconst isDeleting = ref(false);\r\nconst currentBatch = ref({});\r\nconst selectedBatchId = ref(null);\r\n\r\nconst fetchBatches = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`);\r\n    batches.value = response.data.data.reduce((acc, item) => {\r\n      return [...acc, ...item.batches.map((batch) => ({ ...batch, inventoryItem: { id: item.id, name: item.name } }))];\r\n    }, []);\r\n  } catch (error) {\r\n    console.error('Error fetching batches:', error);\r\n  }\r\n};\r\n\r\nconst fetchInventoryItems = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`);\r\n    inventoryItems.value = response.data.data;\r\n  } catch (error) {\r\n    console.error('Error fetching inventory items:', error);\r\n  }\r\n};\r\n\r\nconst handleSubmit = async () => {\r\n  try {\r\n    isSubmitting.value = true;\r\n    if (modalType.value === 'edit') {\r\n      await axios.put(`${API_URL}/batches/${currentBatch.value.id}`, currentBatch.value);\r\n    } else {\r\n      await axios.post(`${API_URL}/batches`, currentBatch.value);\r\n    }\r\n    await fetchBatches();\r\n    closeModal();\r\n  } catch (error) {\r\n    console.error('Error submitting batch:', error);\r\n  } finally {\r\n    isSubmitting.value = false;\r\n  }\r\n};\r\n\r\nconst handleDelete = async () => {\r\n  try {\r\n    isDeleting.value = true;\r\n    await axios.delete(`${API_URL}/batches/${selectedBatchId.value}`);\r\n    await fetchBatches();\r\n    closeModal();\r\n  } catch (error) {\r\n    console.error('Error deleting batch:', error);\r\n  } finally {\r\n    isDeleting.value = false;\r\n  }\r\n};\r\n\r\nconst openModal = (type, batch = {}) => {\r\n  modalType.value = type;\r\n  if (type === 'edit') {\r\n    currentBatch.value = { ...batch };\r\n  } else if (type === 'delete') {\r\n    selectedBatchId.value = batch.id;\r\n  } else {\r\n    currentBatch.value = {\r\n      inventory_item_id: '',\r\n      batch_number: '',\r\n      quantity: 0,\r\n      expiry_date: '',\r\n      supplier: '',\r\n      received_date: '',\r\n    };\r\n  }\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalType.value = null;\r\n  currentBatch.value = {};\r\n};\r\n\r\nconst formatDate = (date) => {\r\n  if (!date) return '';\r\n  return new Date(date).toLocaleDateString();\r\n};\r\n\r\nonMounted(() => {\r\n  fetchBatches();\r\n  fetchInventoryItems();\r\n});\r\n</script>\r\n"],"mappings":";;;AA4EA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AAEjE,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,iBAAiB,MAAM,oCAAoC;AAElE,MAAMC,OAAO,GAAG,qCAAqC;;;;;;;IAErD,MAAMC,OAAO,GAAGV,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMW,cAAc,GAAGX,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMY,SAAS,GAAGZ,GAAG,CAAC,IAAI,CAAC;IAC3B,MAAMa,YAAY,GAAGb,GAAG,CAAC,KAAK,CAAC;IAC/B,MAAMc,UAAU,GAAGd,GAAG,CAAC,KAAK,CAAC;IAC7B,MAAMe,YAAY,GAAGf,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,MAAMgB,eAAe,GAAGhB,GAAG,CAAC,IAAI,CAAC;IAEjC,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGV,OAAO,QAAQ,CAAC;QACpDC,OAAO,CAACU,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;UACvD,OAAO,CAAC,GAAGD,GAAG,EAAE,GAAGC,IAAI,CAACd,OAAO,CAACe,GAAG,CAAEC,KAAK,KAAM;YAAE,GAAGA,KAAK;YAAEC,aAAa,EAAE;cAAEC,EAAE,EAAEJ,IAAI,CAACI,EAAE;cAAEC,IAAI,EAAEL,IAAI,CAACK;YAAK;UAAE,CAAC,CAAC,CAAC,CAAC;QAClH,CAAC,EAAE,EAAE,CAAC;MACR,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMd,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,GAAGV,OAAO,QAAQ,CAAC;QACpDE,cAAc,CAACS,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI;MAC3C,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFpB,YAAY,CAACO,KAAK,GAAG,IAAI;QACzB,IAAIR,SAAS,CAACQ,KAAK,KAAK,MAAM,EAAE;UAC9B,MAAMlB,KAAK,CAACgC,GAAG,CAAC,GAAGzB,OAAO,YAAYM,YAAY,CAACK,KAAK,CAACQ,EAAE,EAAE,EAAEb,YAAY,CAACK,KAAK,CAAC;QACpF,CAAC,MAAM;UACL,MAAMlB,KAAK,CAACiC,IAAI,CAAC,GAAG1B,OAAO,UAAU,EAAEM,YAAY,CAACK,KAAK,CAAC;QAC5D;QACA,MAAMH,YAAY,CAAC,CAAC;QACpBmB,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,SAAS;QACRjB,YAAY,CAACO,KAAK,GAAG,KAAK;MAC5B;IACF,CAAC;IAED,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACFvB,UAAU,CAACM,KAAK,GAAG,IAAI;QACvB,MAAMlB,KAAK,CAACoC,MAAM,CAAC,GAAG7B,OAAO,YAAYO,eAAe,CAACI,KAAK,EAAE,CAAC;QACjE,MAAMH,YAAY,CAAC,CAAC;QACpBmB,UAAU,CAAC,CAAC;MACd,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,SAAS;QACRhB,UAAU,CAACM,KAAK,GAAG,KAAK;MAC1B;IACF,CAAC;IAED,MAAMmB,SAAS,GAAGA,CAACC,IAAI,EAAEd,KAAK,GAAG,CAAC,CAAC,KAAK;MACtCd,SAAS,CAACQ,KAAK,GAAGoB,IAAI;MACtB,IAAIA,IAAI,KAAK,MAAM,EAAE;QACnBzB,YAAY,CAACK,KAAK,GAAG;UAAE,GAAGM;QAAM,CAAC;MACnC,CAAC,MAAM,IAAIc,IAAI,KAAK,QAAQ,EAAE;QAC5BxB,eAAe,CAACI,KAAK,GAAGM,KAAK,CAACE,EAAE;MAClC,CAAC,MAAM;QACLb,YAAY,CAACK,KAAK,GAAG;UACnBqB,iBAAiB,EAAE,EAAE;UACrBC,YAAY,EAAE,EAAE;UAChBC,QAAQ,EAAE,CAAC;UACXC,WAAW,EAAE,EAAE;UACfC,QAAQ,EAAE,EAAE;UACZC,aAAa,EAAE;QACjB,CAAC;MACH;IACF,CAAC;IAED,MAAMV,UAAU,GAAGA,CAAA,KAAM;MACvBxB,SAAS,CAACQ,KAAK,GAAG,IAAI;MACtBL,YAAY,CAACK,KAAK,GAAG,CAAC,CAAC;IACzB,CAAC;IAED,MAAM2B,UAAU,GAAIC,IAAI,IAAK;MAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IAEDjD,SAAS,CAAC,MAAM;MACdgB,YAAY,CAAC,CAAC;MACde,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}