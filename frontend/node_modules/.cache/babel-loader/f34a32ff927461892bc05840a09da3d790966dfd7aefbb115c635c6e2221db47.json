{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport axios from 'axios';\nconst itemsPerPage = 10;\nconst API_URL = 'http://localhost:5000/api/inventory'; // Adjust this to your API URL\n\nexport default {\n  __name: 'Transactions',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const transactions = ref([]);\n    const currentPage = ref(1);\n    const totalItems = ref(0);\n    const filters = ref({\n      transactionType: '',\n      dateRange: '',\n      search: ''\n    });\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/transactions`, {\n          params: {\n            page: currentPage.value,\n            limit: itemsPerPage,\n            ...filters.value\n          }\n        });\n        transactions.value = response.data.data;\n        totalItems.value = response.data.total;\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    };\n    onMounted(fetchTransactions);\n    const filteredTransactions = computed(() => {\n      return transactions.value.filter(transaction => {\n        const matchesType = !filters.value.transactionType || transaction.transaction_type === filters.value.transactionType;\n        const matchesDate = !filters.value.dateRange || new Date(transaction.date).toDateString() === new Date(filters.value.dateRange).toDateString();\n        const matchesSearch = !filters.value.search || transaction.inventory_item.name.toLowerCase().includes(filters.value.search.toLowerCase()) || transaction.batch && transaction.batch.batch_number.toLowerCase().includes(filters.value.search.toLowerCase());\n        return matchesType && matchesDate && matchesSearch;\n      });\n    });\n    const totalPages = computed(() => Math.ceil(totalItems.value / itemsPerPage));\n    const prevPage = () => {\n      if (currentPage.value > 1) {\n        currentPage.value--;\n        fetchTransactions();\n      }\n    };\n    const nextPage = () => {\n      if (currentPage.value < totalPages.value) {\n        currentPage.value++;\n        fetchTransactions();\n      }\n    };\n    const formatDate = dateString => {\n      return new Date(dateString).toLocaleString();\n    };\n    const getTransactionTypeClass = type => {\n      switch (type) {\n        case 'ADD':\n          return 'bg-green-100 text-green-800';\n        case 'REMOVE':\n          return 'bg-red-100 text-red-800';\n        case 'UPDATE':\n          return 'bg-yellow-100 text-yellow-800';\n        case 'DELETE':\n          return 'bg-gray-100 text-gray-800';\n        default:\n          return 'bg-blue-100 text-blue-800';\n      }\n    };\n    const __returned__ = {\n      transactions,\n      currentPage,\n      itemsPerPage,\n      totalItems,\n      filters,\n      API_URL,\n      fetchTransactions,\n      filteredTransactions,\n      totalPages,\n      prevPage,\n      nextPage,\n      formatDate,\n      getTransactionTypeClass,\n      ref,\n      computed,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","axios","itemsPerPage","API_URL","transactions","currentPage","totalItems","filters","transactionType","dateRange","search","fetchTransactions","response","get","params","page","value","limit","data","total","error","console","filteredTransactions","filter","transaction","matchesType","transaction_type","matchesDate","Date","date","toDateString","matchesSearch","inventory_item","name","toLowerCase","includes","batch","batch_number","totalPages","Math","ceil","prevPage","nextPage","formatDate","dateString","toLocaleString","getTransactionTypeClass","type"],"sources":["C:/Users/PC07/Desktop/MCDL-CLINIC/frontend/src/views/Transactions.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-6 py-8\">\r\n    <h1 class=\"text-gray-700 text-3xl font-medium\">Transactions / Audit Log</h1>\r\n    <p class=\"mt-4 text-gray-600\">View and manage all transactions and audit logs related to inventory changes.</p>\r\n    \r\n    <!-- Filters -->\r\n    <div class=\"mt-6 flex flex-wrap gap-4\">\r\n      <div class=\"w-full md:w-64\">\r\n        <label for=\"transactionType\" class=\"block text-sm font-medium text-gray-700\">Transaction Type</label>\r\n        <select\r\n          id=\"transactionType\"\r\n          v-model=\"filters.transactionType\"\r\n          class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        >\r\n          <option value=\"\">All Types</option>\r\n          <option value=\"ADD\">Add</option>\r\n          <option value=\"REMOVE\">Remove</option>\r\n          <option value=\"UPDATE\">Update</option>\r\n          <option value=\"DELETE\">Delete</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"w-full md:w-64\">\r\n        <label for=\"dateRange\" class=\"block text-sm font-medium text-gray-700\">Date Range</label>\r\n        <input\r\n          id=\"dateRange\"\r\n          v-model=\"filters.dateRange\"\r\n          type=\"date\"\r\n          class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        >\r\n      </div>\r\n      <div class=\"w-full md:w-64\">\r\n        <label for=\"search\" class=\"block text-sm font-medium text-gray-700\">Search</label>\r\n        <input\r\n          id=\"search\"\r\n          v-model=\"filters.search\"\r\n          type=\"text\"\r\n          placeholder=\"Search by item or batch...\"\r\n          class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Transactions Table -->\r\n    <div class=\"mt-8 flex flex-col\">\r\n      <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n        <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n          <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n            <table class=\"min-w-full divide-y divide-gray-200\">\r\n              <thead class=\"bg-gray-50\">\r\n                <tr>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Type</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity Change</th>\r\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Remarks</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                <tr v-for=\"transaction in filteredTransactions\" :key=\"transaction.id\">\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ formatDate(transaction.date) }}</td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                    <span :class=\"getTransactionTypeClass(transaction.transaction_type)\" class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\">\r\n                      {{ transaction.transaction_type }}\r\n                    </span>\r\n                  </td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ transaction.InventoryItem.nameas }}</td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ transaction.batch ? transaction.batch.batch_number : 'N/A' }}</td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ transaction.quantity_change }}</td>\r\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ transaction.remarks }}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pagination -->\r\n    <div class=\"mt-4 flex justify-between items-center\">\r\n      <button\r\n        @click=\"prevPage\"\r\n        :disabled=\"currentPage === 1\"\r\n        class=\"px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        :class=\"{ 'opacity-50 cursor-not-allowed': currentPage === 1 }\"\r\n      >\r\n        Previous\r\n      </button>\r\n      <span class=\"text-sm text-gray-700\">\r\n        Page {{ currentPage }} of {{ totalPages }}\r\n      </span>\r\n      <button\r\n        @click=\"nextPage\"\r\n        :disabled=\"currentPage === totalPages\"\r\n        class=\"px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\r\n        :class=\"{ 'opacity-50 cursor-not-allowed': currentPage === totalPages }\"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst transactions = ref([]);\r\nconst currentPage = ref(1);\r\nconst itemsPerPage = 10;\r\nconst totalItems = ref(0);\r\n\r\nconst filters = ref({\r\n  transactionType: '',\r\n  dateRange: '',\r\n  search: '',\r\n});\r\n\r\nconst API_URL = 'http://localhost:5000/api/inventory'; // Adjust this to your API URL\r\n\r\nconst fetchTransactions = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/transactions`, {\r\n      params: {\r\n        page: currentPage.value,\r\n        limit: itemsPerPage,\r\n        ...filters.value,\r\n      },\r\n    });\r\n    transactions.value = response.data.data;\r\n    totalItems.value = response.data.total;\r\n  } catch (error) {\r\n    console.error('Error fetching transactions:', error);\r\n  }\r\n};\r\n\r\nonMounted(fetchTransactions);\r\n\r\nconst filteredTransactions = computed(() => {\r\n  return transactions.value.filter(transaction => {\r\n    const matchesType = !filters.value.transactionType || transaction.transaction_type === filters.value.transactionType;\r\n    const matchesDate = !filters.value.dateRange || new Date(transaction.date).toDateString() === new Date(filters.value.dateRange).toDateString();\r\n    const matchesSearch = !filters.value.search || \r\n      transaction.inventory_item.name.toLowerCase().includes(filters.value.search.toLowerCase()) ||\r\n      (transaction.batch && transaction.batch.batch_number.toLowerCase().includes(filters.value.search.toLowerCase()));\r\n    return matchesType && matchesDate && matchesSearch;\r\n  });\r\n});\r\n\r\nconst totalPages = computed(() => Math.ceil(totalItems.value / itemsPerPage));\r\n\r\nconst prevPage = () => {\r\n  if (currentPage.value > 1) {\r\n    currentPage.value--;\r\n    fetchTransactions();\r\n  }\r\n};\r\n\r\nconst nextPage = () => {\r\n  if (currentPage.value < totalPages.value) {\r\n    currentPage.value++;\r\n    fetchTransactions();\r\n  }\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  return new Date(dateString).toLocaleString();\r\n};\r\n\r\nconst getTransactionTypeClass = (type) => {\r\n  switch (type) {\r\n    case 'ADD':\r\n      return 'bg-green-100 text-green-800';\r\n    case 'REMOVE':\r\n      return 'bg-red-100 text-red-800';\r\n    case 'UPDATE':\r\n      return 'bg-yellow-100 text-yellow-800';\r\n    case 'DELETE':\r\n      return 'bg-gray-100 text-gray-800';\r\n    default:\r\n      return 'bg-blue-100 text-blue-800';\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}