{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      selectedYear: new Date().getFullYear(),\n      availableYears: Array.from({\n        length: 5\n      }, (_, i) => new Date().getFullYear() - i),\n      reportData: []\n    };\n  },\n  methods: {\n    async fetchReport() {\n      try {\n        const response = await axios.get(`/api/reports/inventory`, {\n          params: {\n            year: this.selectedYear\n          }\n        });\n        this.reportData = response.data.data;\n      } catch (error) {\n        console.error(\"Error fetching report:\", error);\n        this.reportData = [];\n      }\n    }\n  },\n  mounted() {\n    this.fetchReport();\n  }\n};","map":{"version":3,"names":["axios","data","selectedYear","Date","getFullYear","availableYears","Array","from","length","_","i","reportData","methods","fetchReport","response","get","params","year","error","console","mounted"],"sources":["C:\\Users\\PC07\\Desktop\\MCDL-CLINIC\\frontend\\src\\views\\Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-6 py-8\">\r\n    <h1 class=\"text-gray-700 text-3xl font-medium mb-4\">Reports</h1>\r\n    <p class=\"mt-2 text-gray-600\">Generate and view reports on inventory status, movements, and other key metrics.</p>\r\n    \r\n    <!-- Year Selection -->\r\n    <div class=\"mt-6 flex items-center space-x-4\">\r\n      <label for=\"year\" class=\"text-gray-700 font-medium\">Select Year:</label>\r\n      <select\r\n        id=\"year\"\r\n        v-model=\"selectedYear\"\r\n        @change=\"fetchReport\"\r\n        class=\"block w-32 px-3 py-2 border rounded-md text-gray-700\"\r\n      >\r\n        <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">\r\n          {{ year }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Report Table -->\r\n    <div v-if=\"reportData.length > 0\" class=\"mt-8\">\r\n      <h2 class=\"text-xl font-medium text-gray-700 mb-4\">\r\n        Inventory Report for {{ selectedYear }}\r\n      </h2>\r\n      <table class=\"table-auto w-full text-left border-collapse\">\r\n        <thead>\r\n          <tr class=\"bg-gray-100 text-gray-700\">\r\n            <th class=\"px-4 py-2 border\">Item Name</th>\r\n            <th class=\"px-4 py-2 border\">Batch Name</th>\r\n            <th class=\"px-4 py-2 border\">Total Added</th>\r\n            <th class=\"px-4 py-2 border\">Total Removed</th>\r\n            <th class=\"px-4 py-2 border\">Net Change</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(item, index) in reportData\"\r\n            :key=\"index\"\r\n            class=\"text-gray-600 hover:bg-gray-50\"\r\n          >\r\n            <td class=\"px-4 py-2 border\">{{ item.itemName }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.batchName }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.totalAdded }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.totalRemoved }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.netChange }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- No Data Message -->\r\n    <div v-else class=\"mt-8\">\r\n      <p class=\"text-gray-600\">No data available for the selected year.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectedYear: new Date().getFullYear(),\r\n      availableYears: Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i),\r\n      reportData: [],\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchReport() {\r\n      try {\r\n        const response = await axios.get(`/api/reports/inventory`, {\r\n          params: { year: this.selectedYear },\r\n        });\r\n        this.reportData = response.data.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching report:\", error);\r\n        this.reportData = [];\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchReport();\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add custom styles here if necessary */\r\n</style>\r\n"],"mappings":"AA2DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACtCC,cAAc,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIM,CAAC,CAAC;MACjFC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,wBAAwB,EAAE;UACzDC,MAAM,EAAE;YAAEC,IAAI,EAAE,IAAI,CAACf;UAAa;QACpC,CAAC,CAAC;QACF,IAAI,CAACS,UAAS,GAAIG,QAAQ,CAACb,IAAI,CAACA,IAAI;MACtC,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAACP,UAAS,GAAI,EAAE;MACtB;IACF;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACP,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}