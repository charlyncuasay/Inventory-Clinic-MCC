{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next';\nconst API_URL = 'http://localhost:5000/api/inventory';\nexport default {\n  __name: 'BatchManagement',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const batches = ref([]);\n    const inventoryItems = ref([]);\n    const showAddModal = ref(false);\n    const showEditModal = ref(false);\n    const showDeleteModal = ref(false);\n    const isSubmitting = ref(false);\n    const isDeleting = ref(false);\n    const selectedBatchId = ref(null);\n    const currentBatch = ref({\n      inventory_item_id: '',\n      batch_number: '',\n      quantity: 0,\n      expiry_date: '',\n      supplier: '',\n      received_date: ''\n    });\n    const fetchBatches = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/items`);\n        batches.value = response.data.data.reduce((acc, item) => {\n          // Flatten the batches array and add the inventory item info\n          return [...acc, ...item.batches.map(batch => ({\n            ...batch,\n            inventoryItem: {\n              id: item.id,\n              name: item.name\n            }\n          }))];\n        }, []);\n      } catch (error) {\n        console.error('Error fetching batches:', error);\n      }\n    };\n    const fetchInventoryItems = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/items`);\n        inventoryItems.value = response.data.data;\n      } catch (error) {\n        console.error('Error fetching inventory items:', error);\n      }\n    };\n    const handleSubmit = async () => {\n      try {\n        isSubmitting.value = true;\n        if (showEditModal.value) {\n          await axios.put(`${API_URL}/batches/${currentBatch.value.id}`, currentBatch.value);\n        } else {\n          await axios.post(`${API_URL}/batches`, currentBatch.value);\n        }\n        await fetchBatches();\n        closeModal();\n      } catch (error) {\n        console.error('Error submitting batch:', error);\n      } finally {\n        isSubmitting.value = false;\n      }\n    };\n    const editBatch = batch => {\n      currentBatch.value = {\n        ...batch\n      };\n      showEditModal.value = true;\n    };\n    const confirmDelete = batch => {\n      selectedBatchId.value = batch.id;\n      showDeleteModal.value = true;\n    };\n    const handleDelete = async () => {\n      try {\n        isDeleting.value = true;\n        await axios.delete(`${API_URL}/batches/${selectedBatchId.value}`);\n        await fetchBatches();\n        showDeleteModal.value = false;\n      } catch (error) {\n        console.error('Error deleting batch:', error);\n      } finally {\n        isDeleting.value = false;\n      }\n    };\n    const closeModal = () => {\n      showAddModal.value = false;\n      showEditModal.value = false;\n      currentBatch.value = {\n        inventory_item_id: '',\n        batch_number: '',\n        quantity: 0,\n        expiry_date: '',\n        supplier: '',\n        received_date: ''\n      };\n    };\n    const formatDate = date => {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    };\n    onMounted(() => {\n      fetchBatches();\n      fetchInventoryItems();\n    });\n    const __returned__ = {\n      API_URL,\n      batches,\n      inventoryItems,\n      showAddModal,\n      showEditModal,\n      showDeleteModal,\n      isSubmitting,\n      isDeleting,\n      selectedBatchId,\n      currentBatch,\n      fetchBatches,\n      fetchInventoryItems,\n      handleSubmit,\n      editBatch,\n      confirmDelete,\n      handleDelete,\n      closeModal,\n      formatDate,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get TrashIcon() {\n        return TrashIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","PlusIcon","PencilIcon","TrashIcon","API_URL","batches","inventoryItems","showAddModal","showEditModal","showDeleteModal","isSubmitting","isDeleting","selectedBatchId","currentBatch","inventory_item_id","batch_number","quantity","expiry_date","supplier","received_date","fetchBatches","response","get","value","data","reduce","acc","item","map","batch","inventoryItem","id","name","error","console","fetchInventoryItems","handleSubmit","put","post","closeModal","editBatch","confirmDelete","handleDelete","delete","formatDate","date","Date","toLocaleDateString"],"sources":["C:/Users/PC07/Desktop/MCDL-CLINIC/frontend/src/views/BatchManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-3xl font-semibold text-gray-800\">Batch Management</h1>\r\n      <button\r\n        @click=\"showAddModal = true\"\r\n        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\r\n      >\r\n        <PlusIcon class=\"h-5 w-5\" />\r\n        Add New Batch\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Batches List -->\r\n    <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <table class=\"min-w-full divide-y divide-gray-200\">\r\n        <thead class=\"bg-gray-50\">\r\n          <tr>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch Number</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Supplier</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Received Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white divide-y divide-gray-200\">\r\n          <tr v-for=\"batch in batches\" :key=\"batch.id\" class=\"hover:bg-gray-50\">\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.batch_number }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.inventoryItem?.name }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.quantity }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.expiry_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.supplier }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.received_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap space-x-2\">\r\n              <button \r\n                @click=\"editBatch(batch)\" \r\n                class=\"text-blue-600 hover:text-blue-900\"\r\n              >\r\n                <PencilIcon class=\"h-5 w-5\" />\r\n              </button>\r\n              <button \r\n                @click=\"confirmDelete(batch)\" \r\n                class=\"text-red-600 hover:text-red-900\"\r\n              >\r\n                <TrashIcon class=\"h-5 w-5\" />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Add/Edit Modal -->\r\n    <div v-if=\"showAddModal || showEditModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 class=\"text-xl font-semibold mb-4\">\r\n          {{ showEditModal ? 'Edit Batch' : 'Add New Batch' }}\r\n        </h2>\r\n        <form @submit.prevent=\"handleSubmit\" class=\"space-y-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Item</label>\r\n            <select \r\n              v-model=\"currentBatch.inventory_item_id\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">Select an item</option>\r\n              <option v-for=\"item in inventoryItems\" :key=\"item.id\" :value=\"item.id\">\r\n                {{ item.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Batch Number</label>\r\n            <input \r\n              v-model=\"currentBatch.batch_number\"\r\n              type=\"text\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Quantity</label>\r\n            <input \r\n              v-model=\"currentBatch.quantity\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Expiry Date</label>\r\n            <input \r\n              v-model=\"currentBatch.expiry_date\"\r\n              type=\"date\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Supplier</label>\r\n            <input \r\n              v-model=\"currentBatch.supplier\"\r\n              type=\"text\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Received Date</label>\r\n            <input \r\n              v-model=\"currentBatch.received_date\"\r\n              type=\"date\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"flex justify-end space-x-2 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              @click=\"closeModal\"\r\n              class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              :disabled=\"isSubmitting\"\r\n            >\r\n              {{ isSubmitting ? 'Saving...' : 'Save' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div v-if=\"showDeleteModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 class=\"text-xl font-semibold mb-4\">Confirm Delete</h2>\r\n        <p>Are you sure you want to delete this batch?</p>\r\n        <div class=\"flex justify-end space-x-2 mt-6\">\r\n          <button\r\n            @click=\"showDeleteModal = false\"\r\n            class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            @click=\"handleDelete\"\r\n            class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\r\n            :disabled=\"isDeleting\"\r\n          >\r\n            {{ isDeleting ? 'Deleting...' : 'Delete' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next'\r\n\r\nconst API_URL = 'http://localhost:5000/api/inventory'\r\n\r\nconst batches = ref([])\r\nconst inventoryItems = ref([])\r\nconst showAddModal = ref(false)\r\nconst showEditModal = ref(false)\r\nconst showDeleteModal = ref(false)\r\nconst isSubmitting = ref(false)\r\nconst isDeleting = ref(false)\r\nconst selectedBatchId = ref(null)\r\n\r\nconst currentBatch = ref({\r\n  inventory_item_id: '',\r\n  batch_number: '',\r\n  quantity: 0,\r\n  expiry_date: '',\r\n  supplier: '',\r\n  received_date: ''\r\n})\r\n\r\nconst fetchBatches = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`)\r\n    batches.value = response.data.data.reduce((acc, item) => {\r\n      // Flatten the batches array and add the inventory item info\r\n      return [...acc, ...item.batches.map(batch => ({\r\n        ...batch,\r\n        inventoryItem: {\r\n          id: item.id,\r\n          name: item.name\r\n        }\r\n      }))]\r\n    }, [])\r\n  } catch (error) {\r\n    console.error('Error fetching batches:', error)\r\n  }\r\n}\r\n\r\nconst fetchInventoryItems = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`)\r\n    inventoryItems.value = response.data.data\r\n  } catch (error) {\r\n    console.error('Error fetching inventory items:', error)\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  try {\r\n    isSubmitting.value = true\r\n    if (showEditModal.value) {\r\n      await axios.put(`${API_URL}/batches/${currentBatch.value.id}`, currentBatch.value)\r\n    } else {\r\n      await axios.post(`${API_URL}/batches`, currentBatch.value)\r\n    }\r\n    await fetchBatches()\r\n    closeModal()\r\n  } catch (error) {\r\n    console.error('Error submitting batch:', error)\r\n  } finally {\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\nconst editBatch = (batch) => {\r\n  currentBatch.value = { ...batch }\r\n  showEditModal.value = true\r\n}\r\n\r\nconst confirmDelete = (batch) => {\r\n  selectedBatchId.value = batch.id\r\n  showDeleteModal.value = true\r\n}\r\n\r\nconst handleDelete = async () => {\r\n  try {\r\n    isDeleting.value = true\r\n    await axios.delete(`${API_URL}/batches/${selectedBatchId.value}`)\r\n    await fetchBatches()\r\n    showDeleteModal.value = false\r\n  } catch (error) {\r\n    console.error('Error deleting batch:', error)\r\n  } finally {\r\n    isDeleting.value = false\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  showAddModal.value = false\r\n  showEditModal.value = false\r\n  currentBatch.value = {\r\n    inventory_item_id: '',\r\n    batch_number: '',\r\n    quantity: 0,\r\n    expiry_date: '',\r\n    supplier: '',\r\n    received_date: ''\r\n  }\r\n}\r\n\r\nconst formatDate = (date) => {\r\n  if (!date) return ''\r\n  return new Date(date).toLocaleDateString()\r\n}\r\n\r\nonMounted(() => {\r\n  fetchBatches()\r\n  fetchInventoryItems()\r\n})\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}