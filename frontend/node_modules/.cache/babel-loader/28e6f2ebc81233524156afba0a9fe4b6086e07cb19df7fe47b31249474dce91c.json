{"ast":null,"code":"import _regeneratorRuntime from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _objectSpread from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Inventory-Clinic-MCC/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next';\nvar API_URL = 'http://localhost:5000/api/inventory';\nexport default {\n  __name: 'BatchManagement',\n  setup: function setup(__props, _ref) {\n    var __expose = _ref.expose;\n    __expose();\n    var batches = ref([]);\n    var inventoryItems = ref([]);\n    var showAddModal = ref(false);\n    var showEditModal = ref(false);\n    var showDeleteModal = ref(false);\n    var isSubmitting = ref(false);\n    var isDeleting = ref(false);\n    var selectedBatchId = ref(null);\n    var filters = ref({\n      search: '',\n      item: ''\n    });\n    var currentBatch = ref({\n      id: null,\n      inventory_item_id: '',\n      batch_number: '',\n      quantity: 0,\n      expiry_date: '',\n      supplier: '',\n      received_date: ''\n    });\n    var fetchBatches = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"\".concat(API_URL, \"/items\"));\n            case 3:\n              response = _context.sent;\n              batches.value = response.data.data.reduce(function (acc, item) {\n                return [].concat(_toConsumableArray(acc), _toConsumableArray((item.batches || []).map(function (batch) {\n                  return _objectSpread(_objectSpread({}, batch), {}, {\n                    inventoryItem: {\n                      id: item.id,\n                      name: item.name\n                    }\n                  });\n                })));\n              }, []);\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error fetching batches:', _context.t0);\n              // Add user-friendly error handling here, e.g., showing an error message\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return function fetchBatches() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var fetchInventoryItems = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get(\"\".concat(API_URL, \"/items\"));\n            case 3:\n              response = _context2.sent;\n              inventoryItems.value = response.data.data || [];\n              _context2.next = 10;\n              break;\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error('Error fetching inventory items:', _context2.t0);\n              // Add user-friendly error handling here, e.g., showing an error message\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n      return function fetchInventoryItems() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var handleSubmit = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              isSubmitting.value = true;\n              if (!currentBatch.value.id) {\n                _context3.next = 8;\n                break;\n              }\n              _context3.next = 5;\n              return axios.put(\"\".concat(API_URL, \"/batches/\").concat(currentBatch.value.id), currentBatch.value);\n            case 5:\n              response = _context3.sent;\n              _context3.next = 11;\n              break;\n            case 8:\n              _context3.next = 10;\n              return axios.post(\"\".concat(API_URL, \"/batches\"), currentBatch.value);\n            case 10:\n              response = _context3.sent;\n            case 11:\n              if (!response.data.success) {\n                _context3.next = 17;\n                break;\n              }\n              _context3.next = 14;\n              return fetchBatches();\n            case 14:\n              closeModal();\n              _context3.next = 18;\n              break;\n            case 17:\n              console.error('Error submitting batch:', response.data.error);\n            case 18:\n              _context3.next = 23;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error('Error submitting batch:', _context3.t0);\n            case 23:\n              _context3.prev = 23;\n              isSubmitting.value = false;\n              return _context3.finish(23);\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, null, [[0, 20, 23, 26]]);\n      }));\n      return function handleSubmit() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var editBatch = function editBatch(batch) {\n      var _batch$inventoryItem;\n      currentBatch.value = {\n        id: batch.id,\n        inventory_item_id: ((_batch$inventoryItem = batch.inventoryItem) === null || _batch$inventoryItem === void 0 ? void 0 : _batch$inventoryItem.id) || '',\n        batch_number: batch.batch_number,\n        quantity: batch.quantity,\n        expiry_date: batch.expiry_date ? new Date(batch.expiry_date).toISOString().split('T')[0] : '',\n        supplier: batch.supplier,\n        received_date: batch.received_date ? new Date(batch.received_date).toISOString().split('T')[0] : ''\n      };\n      showEditModal.value = true;\n    };\n    var confirmDelete = function confirmDelete(batch) {\n      selectedBatchId.value = batch.id;\n      showDeleteModal.value = true;\n    };\n    var handleDelete = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              isDeleting.value = true;\n              _context4.next = 4;\n              return axios[\"delete\"](\"\".concat(API_URL, \"/batches/\").concat(selectedBatchId.value));\n            case 4:\n              _context4.next = 6;\n              return fetchBatches();\n            case 6:\n              showDeleteModal.value = false;\n              _context4.next = 12;\n              break;\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error('Error deleting batch:', _context4.t0);\n            case 12:\n              _context4.prev = 12;\n              isDeleting.value = false;\n              return _context4.finish(12);\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[0, 9, 12, 15]]);\n      }));\n      return function handleDelete() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    var closeModal = function closeModal() {\n      showAddModal.value = false;\n      showEditModal.value = false;\n      currentBatch.value = {\n        id: null,\n        inventory_item_id: '',\n        batch_number: '',\n        quantity: 0,\n        expiry_date: '',\n        supplier: '',\n        received_date: ''\n      };\n    };\n    var openAddModal = function openAddModal() {\n      currentBatch.value = {\n        id: null,\n        inventory_item_id: '',\n        batch_number: '',\n        quantity: 0,\n        expiry_date: '',\n        supplier: '',\n        received_date: ''\n      };\n      showAddModal.value = true;\n    };\n    var formatDate = function formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString();\n    };\n    var filteredBatches = computed(function () {\n      return batches.value.filter(function (batch) {\n        var _batch$inventoryItem2;\n        var matchesSearch = (batch.batch_number || '').toLowerCase().includes(filters.value.search.toLowerCase()) || (batch.supplier || '').toLowerCase().includes(filters.value.search.toLowerCase()) || (((_batch$inventoryItem2 = batch.inventoryItem) === null || _batch$inventoryItem2 === void 0 ? void 0 : _batch$inventoryItem2.name) || '').toLowerCase().includes(filters.value.search.toLowerCase());\n        var matchesItem = !filters.value.item || batch.inventory_item_id === filters.value.item;\n        return matchesSearch && matchesItem;\n      });\n    });\n    onMounted(function () {\n      fetchBatches();\n      fetchInventoryItems();\n    });\n    var __returned__ = {\n      API_URL: API_URL,\n      batches: batches,\n      inventoryItems: inventoryItems,\n      showAddModal: showAddModal,\n      showEditModal: showEditModal,\n      showDeleteModal: showDeleteModal,\n      isSubmitting: isSubmitting,\n      isDeleting: isDeleting,\n      selectedBatchId: selectedBatchId,\n      filters: filters,\n      currentBatch: currentBatch,\n      fetchBatches: fetchBatches,\n      fetchInventoryItems: fetchInventoryItems,\n      handleSubmit: handleSubmit,\n      editBatch: editBatch,\n      confirmDelete: confirmDelete,\n      handleDelete: handleDelete,\n      closeModal: closeModal,\n      openAddModal: openAddModal,\n      formatDate: formatDate,\n      filteredBatches: filteredBatches,\n      ref: ref,\n      onMounted: onMounted,\n      computed: computed,\n      get axios() {\n        return axios;\n      },\n      get PlusIcon() {\n        return PlusIcon;\n      },\n      get PencilIcon() {\n        return PencilIcon;\n      },\n      get TrashIcon() {\n        return TrashIcon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","PlusIcon","PencilIcon","TrashIcon","API_URL","batches","inventoryItems","showAddModal","showEditModal","showDeleteModal","isSubmitting","isDeleting","selectedBatchId","filters","search","item","currentBatch","id","inventory_item_id","batch_number","quantity","expiry_date","supplier","received_date","fetchBatches","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","sent","value","data","reduce","acc","_toConsumableArray","map","batch","_objectSpread","inventoryItem","name","t0","console","error","stop","apply","arguments","fetchInventoryItems","_ref3","_callee2","_callee2$","_context2","handleSubmit","_ref4","_callee3","_callee3$","_context3","put","post","success","closeModal","finish","editBatch","_batch$inventoryItem","Date","toISOString","split","confirmDelete","handleDelete","_ref5","_callee4","_callee4$","_context4","openAddModal","formatDate","date","toLocaleDateString","filteredBatches","filter","_batch$inventoryItem2","matchesSearch","toLowerCase","includes","matchesItem"],"sources":["C:/Inventory-Clinic-MCC/frontend/src/views/BatchManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-4 py-8\">\r\n    <div class=\"flex justify-between items-center mb-6\">\r\n      <h1 class=\"text-3xl font-semibold text-gray-800\">Batch Management</h1>\r\n      <button\r\n        @click=\"openAddModal\"\r\n        class=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg flex items-center gap-2\"\r\n      >\r\n        <PlusIcon class=\"h-5 w-5\" />\r\n        Add New Batch\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Filtering -->\r\n    <div class=\"mb-4 flex gap-4\">\r\n      <input\r\n        v-model=\"filters.search\"\r\n        placeholder=\"Search batches...\"\r\n        class=\"px-4 py-2 border rounded-lg\"\r\n      />\r\n      \r\n    </div>\r\n\r\n    <!-- Batches List -->\r\n    <div class=\"bg-white shadow-md rounded-lg overflow-hidden\">\r\n      <table class=\"min-w-full divide-y divide-gray-200\">\r\n        <thead class=\"bg-gray-50\">\r\n          <tr>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Batch Number</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Item</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Quantity</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Expiry Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Supplier</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Received Date</th>\r\n            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"bg-white divide-y divide-gray-200\">\r\n          <tr v-for=\"batch in filteredBatches\" :key=\"batch.id\" class=\"hover:bg-gray-50\">\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.batch_number }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.inventoryItem?.name }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.quantity }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.expiry_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ batch.supplier }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap\">{{ formatDate(batch.received_date) }}</td>\r\n            <td class=\"px-6 py-4 whitespace-nowrap space-x-2\">\r\n              <button \r\n                @click=\"editBatch(batch)\" \r\n                class=\"text-blue-600 hover:text-blue-900\"\r\n              >\r\n                <PencilIcon class=\"h-5 w-5\" />\r\n              </button>\r\n              <button \r\n                @click=\"confirmDelete(batch)\" \r\n                class=\"text-red-600 hover:text-red-900\"\r\n              >\r\n                <TrashIcon class=\"h-5 w-5\" />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Add/Edit Modal -->\r\n    <div v-if=\"showAddModal || showEditModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 class=\"text-xl font-semibold mb-4\">\r\n          {{ currentBatch.id ? 'Edit Batch' : 'Add New Batch' }}\r\n        </h2>\r\n        <form @submit.prevent=\"handleSubmit\" class=\"space-y-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Item</label>\r\n            <select \r\n              v-model=\"currentBatch.inventory_item_id\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">Select an item</option>\r\n              <option v-for=\"item in inventoryItems\" :key=\"item.id\" :value=\"item.id\">\r\n                {{ item.name }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Quantity</label>\r\n            <input \r\n              v-model=\"currentBatch.quantity\"\r\n              type=\"number\"\r\n              min=\"0\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Expiry Date</label>\r\n            <input \r\n              v-model=\"currentBatch.expiry_date\"\r\n              type=\"date\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Supplier</label>\r\n            <input \r\n              v-model=\"currentBatch.supplier\"\r\n              type=\"text\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700\">Received Date</label>\r\n            <input \r\n              v-model=\"currentBatch.received_date\"\r\n              type=\"date\"\r\n              required\r\n              class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"flex justify-end space-x-2 mt-6\">\r\n            <button\r\n              type=\"button\"\r\n              @click=\"closeModal\"\r\n              class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              :disabled=\"isSubmitting\"\r\n            >\r\n              {{ isSubmitting ? 'Saving...' : (currentBatch.id ? 'Update' : 'Save') }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div v-if=\"showDeleteModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div class=\"bg-white rounded-lg p-6 w-full max-w-md\">\r\n        <h2 class=\"text-xl font-semibold mb-4\">Confirm Delete</h2>\r\n        <p>Are you sure you want to delete this batch?</p>\r\n        <div class=\"flex justify-end space-x-2 mt-6\">\r\n          <button\r\n            @click=\"showDeleteModal = false\"\r\n            class=\"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            @click=\"handleDelete\"\r\n            class=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\r\n            :disabled=\"isDeleting\"\r\n          >\r\n            {{ isDeleting ? 'Deleting...' : 'Delete' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue'\r\nimport axios from 'axios'\r\nimport { PlusIcon, PencilIcon, TrashIcon } from 'lucide-vue-next'\r\n\r\nconst API_URL = 'http://localhost:5000/api/inventory'\r\n\r\nconst batches = ref([])\r\nconst inventoryItems = ref([])\r\nconst showAddModal = ref(false)\r\nconst showEditModal = ref(false)\r\nconst showDeleteModal = ref(false)\r\nconst isSubmitting = ref(false)\r\nconst isDeleting = ref(false)\r\nconst selectedBatchId = ref(null)\r\n\r\nconst filters = ref({\r\n  search: '',\r\n  item: ''\r\n})\r\n\r\nconst currentBatch = ref({\r\n  id: null,\r\n  inventory_item_id: '',\r\n  batch_number: '',\r\n  quantity: 0,\r\n  expiry_date: '',\r\n  supplier: '',\r\n  received_date: ''\r\n})\r\n\r\nconst fetchBatches = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`)\r\n    batches.value = response.data.data.reduce((acc, item) => {\r\n      return [...acc, ...(item.batches || []).map(batch => ({\r\n        ...batch,\r\n        inventoryItem: {\r\n          id: item.id,\r\n          name: item.name\r\n        }\r\n      }))]\r\n    }, [])\r\n  } catch (error) {\r\n    console.error('Error fetching batches:', error)\r\n    // Add user-friendly error handling here, e.g., showing an error message\r\n  }\r\n}\r\n\r\nconst fetchInventoryItems = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/items`)\r\n    inventoryItems.value = response.data.data || []\r\n  } catch (error) {\r\n    console.error('Error fetching inventory items:', error)\r\n    // Add user-friendly error handling here, e.g., showing an error message\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  try {\r\n    isSubmitting.value = true\r\n    let response\r\n    \r\n    if (currentBatch.value.id) {\r\n      response = await axios.put(`${API_URL}/batches/${currentBatch.value.id}`, currentBatch.value)\r\n    } else {\r\n      response = await axios.post(`${API_URL}/batches`, currentBatch.value)\r\n    }\r\n    if (response.data.success) {\r\n      await fetchBatches()\r\n      closeModal()\r\n    } else {\r\n      console.error('Error submitting batch:', response.data.error)\r\n    }\r\n  } catch (error) {\r\n    console.error('Error submitting batch:', error)\r\n  } finally {\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\nconst editBatch = (batch) => {\r\n  currentBatch.value = { \r\n    id: batch.id,\r\n    inventory_item_id: batch.inventoryItem?.id || '',\r\n    batch_number: batch.batch_number,\r\n    quantity: batch.quantity,\r\n    expiry_date: batch.expiry_date ? new Date(batch.expiry_date).toISOString().split('T')[0] : '',\r\n    supplier: batch.supplier,\r\n    received_date: batch.received_date ? new Date(batch.received_date).toISOString().split('T')[0] : ''\r\n  }\r\n  showEditModal.value = true\r\n}\r\n\r\nconst confirmDelete = (batch) => {\r\n  selectedBatchId.value = batch.id\r\n  showDeleteModal.value = true\r\n}\r\n\r\nconst handleDelete = async () => {\r\n  try {\r\n    isDeleting.value = true\r\n    await axios.delete(`${API_URL}/batches/${selectedBatchId.value}`)\r\n    await fetchBatches()\r\n    showDeleteModal.value = false\r\n  } catch (error) {\r\n    console.error('Error deleting batch:', error)\r\n  } finally {\r\n    isDeleting.value = false\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  showAddModal.value = false\r\n  showEditModal.value = false\r\n  currentBatch.value = {\r\n    id: null,\r\n    inventory_item_id: '',\r\n    batch_number: '',\r\n    quantity: 0,\r\n    expiry_date: '',\r\n    supplier: '',\r\n    received_date: ''\r\n  }\r\n}\r\n\r\nconst openAddModal = () => {\r\n  currentBatch.value = {\r\n    id: null,\r\n    inventory_item_id: '',\r\n    batch_number: '',\r\n    quantity: 0,\r\n    expiry_date: '',\r\n    supplier: '',\r\n    received_date: ''\r\n  }\r\n  showAddModal.value = true\r\n}\r\n\r\nconst formatDate = (date) => {\r\n  if (!date) return ''\r\n  return new Date(date).toLocaleDateString()\r\n}\r\n\r\nconst filteredBatches = computed(() => {\r\n  return batches.value.filter(batch => {\r\n    const matchesSearch = (batch.batch_number || '').toLowerCase().includes(filters.value.search.toLowerCase()) ||\r\n                          (batch.supplier || '').toLowerCase().includes(filters.value.search.toLowerCase()) ||\r\n                          (batch.inventoryItem?.name || '').toLowerCase().includes(filters.value.search.toLowerCase())\r\n    const matchesItem = !filters.value.item || batch.inventory_item_id === filters.value.item\r\n    return matchesSearch && matchesItem\r\n  })\r\n})\r\n\r\nonMounted(() => {\r\n  fetchBatches()\r\n  fetchInventoryItems()\r\n})\r\n</script>"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA2KA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,iBAAiB;AAEjE,IAAMC,OAAO,GAAG,qCAAqC;;;;;;IAErD,IAAMC,OAAO,GAAGR,GAAG,CAAC,EAAE,CAAC;IACvB,IAAMS,cAAc,GAAGT,GAAG,CAAC,EAAE,CAAC;IAC9B,IAAMU,YAAY,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAMW,aAAa,GAAGX,GAAG,CAAC,KAAK,CAAC;IAChC,IAAMY,eAAe,GAAGZ,GAAG,CAAC,KAAK,CAAC;IAClC,IAAMa,YAAY,GAAGb,GAAG,CAAC,KAAK,CAAC;IAC/B,IAAMc,UAAU,GAAGd,GAAG,CAAC,KAAK,CAAC;IAC7B,IAAMe,eAAe,GAAGf,GAAG,CAAC,IAAI,CAAC;IAEjC,IAAMgB,OAAO,GAAGhB,GAAG,CAAC;MAClBiB,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAMC,YAAY,GAAGnB,GAAG,CAAC;MACvBoB,EAAE,EAAE,IAAI;MACRC,iBAAiB,EAAE,EAAE;MACrBC,YAAY,EAAE,EAAE;MAChBC,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;IACjB,CAAC,CAAC;IAEF,IAAMC,YAAY;MAAA,IAAAC,KAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA;QAAA,IAAAC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEMnC,KAAK,CAACoC,GAAG,IAAAC,MAAA,CAAIjC,OAAO,WAAQ,CAAC;YAAA;cAA9C0B,QAAQ,GAAAG,QAAA,CAAAK,IAAA;cACdjC,OAAO,CAACkC,KAAK,GAAGT,QAAQ,CAACU,IAAI,CAACA,IAAI,CAACC,MAAM,CAAC,UAACC,GAAG,EAAE3B,IAAI,EAAK;gBACvD,UAAAsB,MAAA,CAAAM,kBAAA,CAAWD,GAAG,GAAAC,kBAAA,CAAK,CAAC5B,IAAI,CAACV,OAAO,IAAI,EAAE,EAAEuC,GAAG,CAAC,UAAAC,KAAK;kBAAA,OAAAC,aAAA,CAAAA,aAAA,KAC5CD,KAAK;oBACRE,aAAa,EAAE;sBACb9B,EAAE,EAAEF,IAAI,CAACE,EAAE;sBACX+B,IAAI,EAAEjC,IAAI,CAACiC;oBACb;kBAAC;gBAAA,CACD,CAAC;cACL,CAAC,EAAE,EAAE,CAAC;cAAAf,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAgB,EAAA,GAAAhB,QAAA;cAENiB,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAAlB,QAAA,CAAAgB,EAAO,CAAC;cAC/C;YAAA;YAAA;cAAA,OAAAhB,QAAA,CAAAmB,IAAA;UAAA;QAAA,GAAAvB,OAAA;MAAA,CAEH;MAAA,gBAhBKL,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAA4B,KAAA,OAAAC,SAAA;MAAA;IAAA,GAgBjB;IAED,IAAMC,mBAAmB;MAAA,IAAAC,KAAA,GAAA9B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA6B,SAAA;QAAA,IAAA3B,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAA2B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzB,IAAA,GAAAyB,SAAA,CAAAxB,IAAA;YAAA;cAAAwB,SAAA,CAAAzB,IAAA;cAAAyB,SAAA,CAAAxB,IAAA;cAAA,OAEDnC,KAAK,CAACoC,GAAG,IAAAC,MAAA,CAAIjC,OAAO,WAAQ,CAAC;YAAA;cAA9C0B,QAAQ,GAAA6B,SAAA,CAAArB,IAAA;cACdhC,cAAc,CAACiC,KAAK,GAAGT,QAAQ,CAACU,IAAI,CAACA,IAAI,IAAI,EAAE;cAAAmB,SAAA,CAAAxB,IAAA;cAAA;YAAA;cAAAwB,SAAA,CAAAzB,IAAA;cAAAyB,SAAA,CAAAV,EAAA,GAAAU,SAAA;cAE/CT,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAAQ,SAAA,CAAAV,EAAO,CAAC;cACvD;YAAA;YAAA;cAAA,OAAAU,SAAA,CAAAP,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA,CAEH;MAAA,gBARKF,mBAAmBA,CAAA;QAAA,OAAAC,KAAA,CAAAH,KAAA,OAAAC,SAAA;MAAA;IAAA,GAQxB;IAED,IAAMM,YAAY;MAAA,IAAAC,KAAA,GAAAnC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAkC,SAAA;QAAA,IAAAhC,QAAA;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAgC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9B,IAAA,GAAA8B,SAAA,CAAA7B,IAAA;YAAA;cAAA6B,SAAA,CAAA9B,IAAA;cAEjBxB,YAAY,CAAC6B,KAAK,GAAG,IAAI;cAAA,KAGrBvB,YAAY,CAACuB,KAAK,CAACtB,EAAE;gBAAA+C,SAAA,CAAA7B,IAAA;gBAAA;cAAA;cAAA6B,SAAA,CAAA7B,IAAA;cAAA,OACNnC,KAAK,CAACiE,GAAG,IAAA5B,MAAA,CAAIjC,OAAO,eAAAiC,MAAA,CAAYrB,YAAY,CAACuB,KAAK,CAACtB,EAAE,GAAID,YAAY,CAACuB,KAAK,CAAC;YAAA;cAA7FT,QAAQ,GAAAkC,SAAA,CAAA1B,IAAA;cAAA0B,SAAA,CAAA7B,IAAA;cAAA;YAAA;cAAA6B,SAAA,CAAA7B,IAAA;cAAA,OAESnC,KAAK,CAACkE,IAAI,IAAA7B,MAAA,CAAIjC,OAAO,eAAYY,YAAY,CAACuB,KAAK,CAAC;YAAA;cAArET,QAAQ,GAAAkC,SAAA,CAAA1B,IAAA;YAAA;cAAA,KAENR,QAAQ,CAACU,IAAI,CAAC2B,OAAO;gBAAAH,SAAA,CAAA7B,IAAA;gBAAA;cAAA;cAAA6B,SAAA,CAAA7B,IAAA;cAAA,OACjBX,YAAY,CAAC,CAAC;YAAA;cACpB4C,UAAU,CAAC,CAAC;cAAAJ,SAAA,CAAA7B,IAAA;cAAA;YAAA;cAEZe,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAErB,QAAQ,CAACU,IAAI,CAACW,KAAK,CAAC;YAAA;cAAAa,SAAA,CAAA7B,IAAA;cAAA;YAAA;cAAA6B,SAAA,CAAA9B,IAAA;cAAA8B,SAAA,CAAAf,EAAA,GAAAe,SAAA;cAG/Dd,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAAa,SAAA,CAAAf,EAAO,CAAC;YAAA;cAAAe,SAAA,CAAA9B,IAAA;cAE/CxB,YAAY,CAAC6B,KAAK,GAAG,KAAK;cAAA,OAAAyB,SAAA,CAAAK,MAAA;YAAA;YAAA;cAAA,OAAAL,SAAA,CAAAZ,IAAA;UAAA;QAAA,GAAAU,QAAA;MAAA,CAE7B;MAAA,gBArBKF,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;IAAA,GAqBjB;IAED,IAAMgB,SAAS,GAAG,SAAZA,SAASA,CAAIzB,KAAK,EAAK;MAAA,IAAA0B,oBAAA;MAC3BvD,YAAY,CAACuB,KAAK,GAAG;QACnBtB,EAAE,EAAE4B,KAAK,CAAC5B,EAAE;QACZC,iBAAiB,EAAE,EAAAqD,oBAAA,GAAA1B,KAAK,CAACE,aAAa,cAAAwB,oBAAA,uBAAnBA,oBAAA,CAAqBtD,EAAE,KAAI,EAAE;QAChDE,YAAY,EAAE0B,KAAK,CAAC1B,YAAY;QAChCC,QAAQ,EAAEyB,KAAK,CAACzB,QAAQ;QACxBC,WAAW,EAAEwB,KAAK,CAACxB,WAAW,GAAG,IAAImD,IAAI,CAAC3B,KAAK,CAACxB,WAAW,CAAC,CAACoD,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QAC7FpD,QAAQ,EAAEuB,KAAK,CAACvB,QAAQ;QACxBC,aAAa,EAAEsB,KAAK,CAACtB,aAAa,GAAG,IAAIiD,IAAI,CAAC3B,KAAK,CAACtB,aAAa,CAAC,CAACkD,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG;MACnG,CAAC;MACDlE,aAAa,CAAC+B,KAAK,GAAG,IAAI;IAC5B,CAAC;IAED,IAAMoC,aAAa,GAAG,SAAhBA,aAAaA,CAAI9B,KAAK,EAAK;MAC/BjC,eAAe,CAAC2B,KAAK,GAAGM,KAAK,CAAC5B,EAAE;MAChCR,eAAe,CAAC8B,KAAK,GAAG,IAAI;IAC9B,CAAC;IAED,IAAMqC,YAAY;MAAA,IAAAC,KAAA,GAAAnD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAkD,SAAA;QAAA,OAAAnD,mBAAA,GAAAI,IAAA,UAAAgD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9C,IAAA,GAAA8C,SAAA,CAAA7C,IAAA;YAAA;cAAA6C,SAAA,CAAA9C,IAAA;cAEjBvB,UAAU,CAAC4B,KAAK,GAAG,IAAI;cAAAyC,SAAA,CAAA7C,IAAA;cAAA,OACjBnC,KAAK,UAAO,IAAAqC,MAAA,CAAIjC,OAAO,eAAAiC,MAAA,CAAYzB,eAAe,CAAC2B,KAAK,CAAE,CAAC;YAAA;cAAAyC,SAAA,CAAA7C,IAAA;cAAA,OAC3DX,YAAY,CAAC,CAAC;YAAA;cACpBf,eAAe,CAAC8B,KAAK,GAAG,KAAK;cAAAyC,SAAA,CAAA7C,IAAA;cAAA;YAAA;cAAA6C,SAAA,CAAA9C,IAAA;cAAA8C,SAAA,CAAA/B,EAAA,GAAA+B,SAAA;cAE7B9B,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAA6B,SAAA,CAAA/B,EAAO,CAAC;YAAA;cAAA+B,SAAA,CAAA9C,IAAA;cAE7CvB,UAAU,CAAC4B,KAAK,GAAG,KAAK;cAAA,OAAAyC,SAAA,CAAAX,MAAA;YAAA;YAAA;cAAA,OAAAW,SAAA,CAAA5B,IAAA;UAAA;QAAA,GAAA0B,QAAA;MAAA,CAE3B;MAAA,gBAXKF,YAAYA,CAAA;QAAA,OAAAC,KAAA,CAAAxB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAWjB;IAED,IAAMc,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;MACvB7D,YAAY,CAACgC,KAAK,GAAG,KAAK;MAC1B/B,aAAa,CAAC+B,KAAK,GAAG,KAAK;MAC3BvB,YAAY,CAACuB,KAAK,GAAG;QACnBtB,EAAE,EAAE,IAAI;QACRC,iBAAiB,EAAE,EAAE;QACrBC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE;MACjB,CAAC;IACH,CAAC;IAED,IAAM0D,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;MACzBjE,YAAY,CAACuB,KAAK,GAAG;QACnBtB,EAAE,EAAE,IAAI;QACRC,iBAAiB,EAAE,EAAE;QACrBC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAE,CAAC;QACXC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,aAAa,EAAE;MACjB,CAAC;MACDhB,YAAY,CAACgC,KAAK,GAAG,IAAI;IAC3B,CAAC;IAED,IAAM2C,UAAU,GAAG,SAAbA,UAAUA,CAAIC,IAAI,EAAK;MAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,OAAO,IAAIX,IAAI,CAACW,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAC5C,CAAC;IAED,IAAMC,eAAe,GAAGtF,QAAQ,CAAC,YAAM;MACrC,OAAOM,OAAO,CAACkC,KAAK,CAAC+C,MAAM,CAAC,UAAAzC,KAAK,EAAI;QAAA,IAAA0C,qBAAA;QACnC,IAAMC,aAAa,GAAG,CAAC3C,KAAK,CAAC1B,YAAY,IAAI,EAAE,EAAEsE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7E,OAAO,CAAC0B,KAAK,CAACzB,MAAM,CAAC2E,WAAW,CAAC,CAAC,CAAC,IACrF,CAAC5C,KAAK,CAACvB,QAAQ,IAAI,EAAE,EAAEmE,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7E,OAAO,CAAC0B,KAAK,CAACzB,MAAM,CAAC2E,WAAW,CAAC,CAAC,CAAC,IACjF,CAAC,EAAAF,qBAAA,GAAA1C,KAAK,CAACE,aAAa,cAAAwC,qBAAA,uBAAnBA,qBAAA,CAAqBvC,IAAI,KAAI,EAAE,EAAEyC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7E,OAAO,CAAC0B,KAAK,CAACzB,MAAM,CAAC2E,WAAW,CAAC,CAAC,CAAC;QAClH,IAAME,WAAW,GAAG,CAAC9E,OAAO,CAAC0B,KAAK,CAACxB,IAAI,IAAI8B,KAAK,CAAC3B,iBAAiB,KAAKL,OAAO,CAAC0B,KAAK,CAACxB,IAAI;QACzF,OAAOyE,aAAa,IAAIG,WAAW;MACrC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF7F,SAAS,CAAC,YAAM;MACd0B,YAAY,CAAC,CAAC;MACd+B,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}