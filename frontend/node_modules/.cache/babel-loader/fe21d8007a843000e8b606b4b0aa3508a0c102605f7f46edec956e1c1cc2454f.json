{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport { ref, onMounted } from \"vue\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\n// Reactive variables\n\nexport default {\n  __name: 'Reports',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const selectedYear = ref(new Date().getFullYear());\n    const availableYears = ref(Array.from({\n      length: 5\n    }, (_, i) => new Date().getFullYear() - i));\n    const reportData = ref([]);\n\n    // Fetch report data\n    const fetchReport = async () => {\n      try {\n        const response = await axios.get(\"/reports\", {\n          params: {\n            year: selectedYear.value\n          }\n        });\n        reportData.value = response.data.data;\n      } catch (error) {\n        console.error(\"Error fetching report:\", error);\n        reportData.value = [];\n      }\n    };\n\n    // Download PDF report\n    const downloadPDF = () => {\n      const doc = new jsPDF();\n\n      // Title\n      doc.setFontSize(18);\n      doc.text(`Inventory Report for ${selectedYear.value}`, 14, 20);\n\n      // Table\n      doc.autoTable({\n        startY: 30,\n        head: [[\"Item Name\", \"Batch Name\", \"Total Added\", \"Total Removed\", \"Net Change\"]],\n        body: reportData.value.map(item => [item.itemName, item.batchName, item.totalAdded, item.totalRemoved, item.netChange])\n      });\n\n      // Save PDF\n      doc.save(`Inventory_Report_${selectedYear.value}.pdf`);\n    };\n\n    // Fetch report data when the component is mounted\n    onMounted(fetchReport);\n    const __returned__ = {\n      selectedYear,\n      availableYears,\n      reportData,\n      fetchReport,\n      downloadPDF,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get jsPDF() {\n        return jsPDF;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","jsPDF","selectedYear","Date","getFullYear","availableYears","Array","from","length","_","i","reportData","fetchReport","response","get","params","year","value","data","error","console","downloadPDF","doc","setFontSize","text","autoTable","startY","head","body","map","item","itemName","batchName","totalAdded","totalRemoved","netChange","save"],"sources":["C:/Users/PC07/Desktop/MCDL-CLINIC/frontend/src/views/Reports.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto px-6 py-8\">\r\n    <h1 class=\"text-gray-700 text-3xl font-medium mb-4\">Yearly Inventory Reports</h1>\r\n    <p class=\"text-gray-600\">View and download inventory reports for each year.</p>\r\n\r\n    <!-- Year Selection -->\r\n    <div class=\"mt-6 flex items-center space-x-4\">\r\n      <label for=\"year\" class=\"text-gray-700 font-medium\">Select Year:</label>\r\n      <select\r\n        id=\"year\"\r\n        v-model=\"selectedYear\"\r\n        @change=\"fetchReport\"\r\n        class=\"block w-32 px-3 py-2 border rounded-md text-gray-700\"\r\n      >\r\n        <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">\r\n          {{ year }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Report Table -->\r\n    <div v-if=\"reportData.length > -1\" class=\"mt-8\">\r\n      <h2 class=\"text-xl font-medium text-gray-700 mb-4\">\r\n        Inventory Report for {{ selectedYear }}\r\n      </h2>\r\n      <table class=\"table-auto w-full text-left border-collapse\">\r\n        <thead>\r\n          <tr class=\"bg-gray-100 text-gray-700\">\r\n            <th class=\"px-4 py-2 border\">Item Name</th>\r\n            <th class=\"px-4 py-2 border\">Batch Name</th>\r\n            <th class=\"px-4 py-2 border\">Total Added</th>\r\n            <th class=\"px-4 py-2 border\">Total Removed</th>\r\n            <th class=\"px-4 py-2 border\">Net Change</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(item, index) in reportData\"\r\n            :key=\"index\"\r\n            class=\"text-gray-600 hover:bg-gray-50\"\r\n          >\r\n            <td class=\"px-4 py-2 border\">{{ item.itemName }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.batchName }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.totalAdded }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.totalRemoved }}</td>\r\n            <td class=\"px-4 py-2 border\">{{ item.netChange }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- Download Button -->\r\n      <button\r\n        @click=\"downloadPDF\"\r\n        class=\"mt-6 px-6 py-2 bg-blue-600 text-white font-medium rounded-md hover:bg-blue-500\"\r\n      >\r\n        Download PDF\r\n      </button>\r\n    </div>\r\n\r\n    <!-- No Data Message -->\r\n    <div v-else class=\"mt-8\">\r\n      <p class=\"text-gray-600\">No data available for the selected year.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n\r\n// Reactive variables\r\nconst selectedYear = ref(new Date().getFullYear());\r\nconst availableYears = ref(Array.from({ length: 5 }, (_, i) => new Date().getFullYear() - i));\r\nconst reportData = ref([]);\r\n\r\n// Fetch report data\r\nconst fetchReport = async () => {\r\n  try {\r\n    const response = await axios.get(\"/reports\", {\r\n      params: { year: selectedYear.value },\r\n    });\r\n    reportData.value = response.data.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching report:\", error);\r\n    reportData.value = [];\r\n  }\r\n};\r\n\r\n// Download PDF report\r\nconst downloadPDF = () => {\r\n  const doc = new jsPDF();\r\n\r\n  // Title\r\n  doc.setFontSize(18);\r\n  doc.text(`Inventory Report for ${selectedYear.value}`, 14, 20);\r\n\r\n  // Table\r\n  doc.autoTable({\r\n    startY: 30,\r\n    head: [[\"Item Name\", \"Batch Name\", \"Total Added\", \"Total Removed\", \"Net Change\"]],\r\n    body: reportData.value.map((item) => [\r\n      item.itemName,\r\n      item.batchName,\r\n      item.totalAdded,\r\n      item.totalRemoved,\r\n      item.netChange,\r\n    ]),\r\n  });\r\n\r\n  // Save PDF\r\n  doc.save(`Inventory_Report_${selectedYear.value}.pdf`);\r\n};\r\n\r\n// Fetch report data when the component is mounted\r\nonMounted(fetchReport);\r\n</script>\r\n\r\n"],"mappings":";AAmEA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;;AAExB;;;;;;;;IACA,MAAMC,YAAY,GAAGJ,GAAG,CAAC,IAAIK,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAClD,MAAMC,cAAc,GAAGP,GAAG,CAACQ,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIP,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGM,CAAC,CAAC,CAAC;IAC7F,MAAMC,UAAU,GAAGb,GAAG,CAAC,EAAE,CAAC;;IAE1B;IACA,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,UAAU,EAAE;UAC3CC,MAAM,EAAE;YAAEC,IAAI,EAAEd,YAAY,CAACe;UAAM;QACrC,CAAC,CAAC;QACFN,UAAU,CAACM,KAAK,GAAGJ,QAAQ,CAACK,IAAI,CAACA,IAAI;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CR,UAAU,CAACM,KAAK,GAAG,EAAE;MACvB;IACF,CAAC;;IAED;IACA,MAAMI,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,GAAG,GAAG,IAAIrB,KAAK,CAAC,CAAC;;MAEvB;MACAqB,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;MACnBD,GAAG,CAACE,IAAI,CAAC,wBAAwBtB,YAAY,CAACe,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;MAE9D;MACAK,GAAG,CAACG,SAAS,CAAC;QACZC,MAAM,EAAE,EAAE;QACVC,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;QACjFC,IAAI,EAAEjB,UAAU,CAACM,KAAK,CAACY,GAAG,CAAEC,IAAI,IAAK,CACnCA,IAAI,CAACC,QAAQ,EACbD,IAAI,CAACE,SAAS,EACdF,IAAI,CAACG,UAAU,EACfH,IAAI,CAACI,YAAY,EACjBJ,IAAI,CAACK,SAAS,CACf;MACH,CAAC,CAAC;;MAEF;MACAb,GAAG,CAACc,IAAI,CAAC,oBAAoBlC,YAAY,CAACe,KAAK,MAAM,CAAC;IACxD,CAAC;;IAED;IACAlB,SAAS,CAACa,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}